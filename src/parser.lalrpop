use std::str::FromStr;
use ast::Expression;

grammar;

pub expressions: Vec<Expression> = {
    expression* => <>
};

expression: Expression = {
    "(" <o:op_binary> <l:expression> <r:expression> ")" => {
        Expression::BinaryOp(o, Box::new(l), Box::new(r))
    },
    "(" <f:function_name> <v:expressions> ")" => {
        Expression::Function(f, v)
    },
    integer => {
        Expression::Integer(<>)
    },
};

function_name: String = {
    r"[a-zA-Z]+" => <>.to_string(),
};

op_binary: String = {
    r"[\+\-\*/]" => <>.to_string(),
};

integer: i64 = {
    r"\d+" => i64::from_str(<>).unwrap(),
};
